// <auto-generated />
using System;
using AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccessData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210713190232_clinic")]
    partial class clinic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("ClienteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            ClienteId = 5,
                            Apellido = "Bravo",
                            Direccion = "Calle 9 N2946",
                            Dni = "39876453",
                            Email = "cliente@gmail.com",
                            Nombre = "Jose",
                            Telefono = "1136756432"
                        },
                        new
                        {
                            ClienteId = 6,
                            Apellido = "Nuzzo",
                            Direccion = "Calle 123 n152",
                            Dni = "39823513",
                            Email = "cliente2@gmail.com",
                            Nombre = "Julian",
                            Telefono = "1136755231"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.Property<int>("MascotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Peso")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.HasKey("MascotaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MascotaId");

                    b.ToTable("Mascota");

                    b.HasData(
                        new
                        {
                            MascotaId = 1,
                            ClienteId = 5,
                            Edad = 5,
                            Nombre = "Morena",
                            Peso = 3
                        },
                        new
                        {
                            MascotaId = 2,
                            ClienteId = 5,
                            Edad = 9,
                            Nombre = "Tomas",
                            Peso = 10
                        },
                        new
                        {
                            MascotaId = 3,
                            ClienteId = 5,
                            Edad = 1,
                            Nombre = "Firulais",
                            Peso = 2
                        },
                        new
                        {
                            MascotaId = 4,
                            ClienteId = 6,
                            Edad = 12,
                            Nombre = "Lola",
                            Peso = 21
                        });
                });

            modelBuilder.Entity("Domain.Entities.Tratamiento", b =>
                {
                    b.Property<int>("TratamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistroId")
                        .HasColumnType("int");

                    b.HasKey("TratamientoId");

                    b.HasIndex("RegistroId")
                        .IsUnique();

                    b.ToTable("Tratamiento");

                    b.HasData(
                        new
                        {
                            TratamientoId = 1,
                            Descripcion = "Tratamiento 1",
                            RegistroId = 1
                        },
                        new
                        {
                            TratamientoId = 2,
                            Descripcion = "Tratamiento 2",
                            RegistroId = 2
                        },
                        new
                        {
                            TratamientoId = 3,
                            Descripcion = "Tratamiento 3",
                            RegistroId = 3
                        },
                        new
                        {
                            TratamientoId = 4,
                            Descripcion = "Tratamiento 1",
                            RegistroId = 4
                        },
                        new
                        {
                            TratamientoId = 5,
                            Descripcion = "Tratamiento 1",
                            RegistroId = 5
                        },
                        new
                        {
                            TratamientoId = 6,
                            Descripcion = "Tratamiento 1",
                            RegistroId = 6
                        });
                });

            modelBuilder.Entity("Domain.Entities.Veterinario", b =>
                {
                    b.Property<int>("VeterinarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ConsultorioId")
                        .HasColumnType("int");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("VeterinarioId");

                    b.HasIndex("ConsultorioId")
                        .IsUnique();

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Veterinario");

                    b.HasData(
                        new
                        {
                            VeterinarioId = 2,
                            Apellido = "Diaz",
                            ConsultorioId = 1,
                            Dni = "42132121",
                            Domicilio = "Calle 21 231",
                            Email = "veterinario@gmail.com",
                            FechaNacimiento = "14-9-1990",
                            Matricula = "ADS213",
                            Nombre = "Juan",
                            Sexo = "m",
                            Telefono = "42113212"
                        },
                        new
                        {
                            VeterinarioId = 3,
                            Apellido = "Perez",
                            ConsultorioId = 2,
                            Dni = "321321321",
                            Domicilio = "Calle 132 7654",
                            Email = "veterinario2@gmail.com",
                            FechaNacimiento = "28-3-1958",
                            Matricula = "XSD213",
                            Nombre = "Sol",
                            Sexo = "f",
                            Telefono = "4232136"
                        },
                        new
                        {
                            VeterinarioId = 4,
                            Apellido = "Paz",
                            ConsultorioId = 3,
                            Dni = "25432567",
                            Domicilio = "Calle 252 532",
                            Email = "veterinario3@gmail.com",
                            FechaNacimiento = "12-1-1974",
                            Matricula = "TDQ231",
                            Nombre = "Mar",
                            Sexo = "f",
                            Telefono = "42562132"
                        });
                });

            modelBuilder.Entity("Domain.Models.Consultorio", b =>
                {
                    b.Property<int>("ConsultorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Numero")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<int>("VeterinariaId")
                        .HasColumnType("int");

                    b.HasKey("ConsultorioId");

                    b.HasIndex("ConsultorioId");

                    b.HasIndex("VeterinariaId");

                    b.ToTable("Consultorio");

                    b.HasData(
                        new
                        {
                            ConsultorioId = 1,
                            Numero = 100,
                            VeterinariaId = 1
                        },
                        new
                        {
                            ConsultorioId = 2,
                            Numero = 101,
                            VeterinariaId = 1
                        },
                        new
                        {
                            ConsultorioId = 3,
                            Numero = 200,
                            VeterinariaId = 1
                        },
                        new
                        {
                            ConsultorioId = 4,
                            Numero = 201,
                            VeterinariaId = 1
                        },
                        new
                        {
                            ConsultorioId = 5,
                            Numero = 202,
                            VeterinariaId = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.HistoriaClinica", b =>
                {
                    b.Property<int>("HistoriaClinicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.HasKey("HistoriaClinicaId");

                    b.HasIndex("HistoriaClinicaId");

                    b.HasIndex("MascotaId")
                        .IsUnique();

                    b.ToTable("HistoriasClinicas");

                    b.HasData(
                        new
                        {
                            HistoriaClinicaId = 1,
                            MascotaId = 1
                        },
                        new
                        {
                            HistoriaClinicaId = 2,
                            MascotaId = 2
                        },
                        new
                        {
                            HistoriaClinicaId = 3,
                            MascotaId = 3
                        },
                        new
                        {
                            HistoriaClinicaId = 4,
                            MascotaId = 4
                        });
                });

            modelBuilder.Entity("Domain.Models.Registro", b =>
                {
                    b.Property<int>("RegistroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Analisis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("HistoriaClinicaId")
                        .HasColumnType("int");

                    b.HasKey("RegistroId");

                    b.HasIndex("HistoriaClinicaId");

                    b.HasIndex("RegistroId");

                    b.ToTable("Registros");

                    b.HasData(
                        new
                        {
                            RegistroId = 1,
                            Analisis = "Analisis 1",
                            FechaCreacion = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoriaClinicaId = 1
                        },
                        new
                        {
                            RegistroId = 2,
                            Analisis = "Analisis 2",
                            FechaCreacion = new DateTime(2021, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoriaClinicaId = 1
                        },
                        new
                        {
                            RegistroId = 3,
                            Analisis = "Analisis 3",
                            FechaCreacion = new DateTime(2021, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoriaClinicaId = 1
                        },
                        new
                        {
                            RegistroId = 4,
                            Analisis = "Analisis 1",
                            FechaCreacion = new DateTime(2021, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoriaClinicaId = 2
                        },
                        new
                        {
                            RegistroId = 5,
                            Analisis = "Analisis 1",
                            FechaCreacion = new DateTime(2021, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoriaClinicaId = 3
                        },
                        new
                        {
                            RegistroId = 6,
                            Analisis = "Analisis 1",
                            FechaCreacion = new DateTime(2021, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoriaClinicaId = 4
                        });
                });

            modelBuilder.Entity("Domain.Models.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Horafin")
                        .HasColumnType("datetime2");

                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.Property<int>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("TurnoId");

                    b.HasIndex("MascotaId");

                    b.HasIndex("TurnoId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Turno");

                    b.HasData(
                        new
                        {
                            TurnoId = 1,
                            Fecha = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraInicio = new DateTime(2021, 7, 13, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Horafin = new DateTime(2021, 7, 13, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            MascotaId = 1,
                            VeterinarioId = 2
                        },
                        new
                        {
                            TurnoId = 2,
                            Fecha = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraInicio = new DateTime(2021, 7, 13, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Horafin = new DateTime(2021, 7, 13, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            MascotaId = 2,
                            VeterinarioId = 3
                        },
                        new
                        {
                            TurnoId = 3,
                            Fecha = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraInicio = new DateTime(2021, 7, 13, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            Horafin = new DateTime(2021, 7, 13, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            MascotaId = 1,
                            VeterinarioId = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.Veterinaria", b =>
                {
                    b.Property<int>("VeterinariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VeterinariaId");

                    b.HasIndex("VeterinariaId");

                    b.ToTable("Veterinaria");

                    b.HasData(
                        new
                        {
                            VeterinariaId = 1,
                            Direccion = "Av. San martin 382",
                            Nombre = "Pet's Life",
                            Telefono = "4256-2351"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Mascotas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain.Entities.Tratamiento", b =>
                {
                    b.HasOne("Domain.Models.Registro", "Registro")
                        .WithOne("Tratamiento")
                        .HasForeignKey("Domain.Entities.Tratamiento", "RegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });

            modelBuilder.Entity("Domain.Entities.Veterinario", b =>
                {
                    b.HasOne("Domain.Models.Consultorio", "Consultorio")
                        .WithOne("Veterinario")
                        .HasForeignKey("Domain.Entities.Veterinario", "ConsultorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultorio");
                });

            modelBuilder.Entity("Domain.Models.Consultorio", b =>
                {
                    b.HasOne("Domain.Models.Veterinaria", "Veterinaria")
                        .WithMany("Consultorios")
                        .HasForeignKey("VeterinariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veterinaria");
                });

            modelBuilder.Entity("Domain.Models.HistoriaClinica", b =>
                {
                    b.HasOne("Domain.Entities.Mascota", "Mascota")
                        .WithOne("HistoriaClinica")
                        .HasForeignKey("Domain.Models.HistoriaClinica", "MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("Domain.Models.Registro", b =>
                {
                    b.HasOne("Domain.Models.HistoriaClinica", "HistoriaClinica")
                        .WithMany("Registros")
                        .HasForeignKey("HistoriaClinicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistoriaClinica");
                });

            modelBuilder.Entity("Domain.Models.Turno", b =>
                {
                    b.HasOne("Domain.Entities.Mascota", "Mascota")
                        .WithMany("Turno")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Veterinario", "Veterinario")
                        .WithMany("Turnos")
                        .HasForeignKey("VeterinarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.Navigation("HistoriaClinica");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Domain.Entities.Veterinario", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Domain.Models.Consultorio", b =>
                {
                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Domain.Models.HistoriaClinica", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("Domain.Models.Registro", b =>
                {
                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("Domain.Models.Veterinaria", b =>
                {
                    b.Navigation("Consultorios");
                });
#pragma warning restore 612, 618
        }
    }
}
